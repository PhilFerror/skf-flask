# Run docker-compose up
# Live long and prosper
version: '3'
services:
  rabbitmq:
    container_name: skf-rabbitmq_container
    image: rabbitmq:3.8.19
    environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=admin-skf-secret
    ports:
        - "5672:5672"
        - "15672:15672"
  mysql:
    container_name: skf-mysql_container
    image: blabla1337/mysql
    restart: always
    environment:
      MYSQL_DATABASE: "skf"
      MYSQL_ROOT_PASSWORD: "admin-skf-secret"
      MYSQL_DEFAULT_PASS: "admin-skf-secret"
      MYSQL_DEFAULT_USER: "root"
    ports:
      - "3306:3306"
  nginx:
    container_name: skf-nginx_container
    restart: always
    image: nginx
    volumes:
      - ./Docker/compose/minimal-site.conf:/etc/nginx/nginx.conf
      - ./Docker/compose/proxy_config.pac:/usr/share/nginx/html/proxy_config.pac
    ports:
      - "80:80"
  skf-angular:
    container_name: skf-angular_container
    depends_on:
      - "rabbitmq"
      - "nginx"
      - "mysql"
    restart: always
    image: "blabla1337/skf-angular:4.1.0"

    environment:
      - FRONTEND_URI=http://localhost
      - AUTH_METHOD=skiploginprovider
  skf-api:
    container_name: skf-api_container
    build:
      context: ./
      dockerfile: ./Docker/alpine-cloud/api/Dockerfile    
    depends_on:
      - "rabbitmq"
      - "nginx"
      - "mysql"
    restart: always
    volumes:
      - ~/.kube/config:/home/user_api/.kube/config
    image: "pei/skf-api:4.1.0"
    environment:
      - SKF_FLASK_DEBUG=False
      - SKF_API_URL=skf-api://api
      - SKF_TESTING=False
      - SKF_DB_URL=mysql+pymysql://root:admin-skf-secret@mysql/skf?charset=utf8mb4
      - SKF_JWT_SECRET=nfQBUYyFTFzWk3qp63evfi8Av73kJsthL36hh8dk6wtnph8nRsrYqJi8q2FGGyD2
      - SKF_LABS_DOMAIN=http://localhost
      - SKF_LABS_DEPLOY_MODE=port
      - RABBIT_MQ_CONN_STRING=rabbitmq
      # cat ~/.kube/config | base64  -w 0 > LABS_KUBE_CONF.conf 
      - LABS_KUBE_CONF=YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNMWVrTkRRV01yWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplRTFVU1hkTmFrVjNUV3BGZWs1R2IxaEVWRTE0VFZSRmVrMUVSWGROYWtWNlRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVEZZMENucEdXbnBQY3pBd2JpOTNSbVJEY200eVVFeHRVWHBXV2pOeWFEZ3ZkRE5vU1VKb2RGUmxNbFpzVEU5TE5uVlRVakZ0TmxCU1IzQTJlRll5U1RkbU0zSUtTU3Q2YTJOclFVUTNWR1ZaVFVoU1dIRklTRVo0YVdSMVVXNDBURmxFYUd4Nk9FMUZNR0ZvU20wMlRtbFRTeTl3UjFvM05WTk9kVTgyTUZnM1RuVTVZUXBGYm1aWlYzZGpaemgwYUV0YVNVWkRlazlGWVRGWVVITkhURzluWWt0NFRWUXpUM3B5TlZacWNrTlVXRTUzTkhKQ1ZWTjBjQ3RtY0hSc1JsVTRlRXhTQ2xoM2MzRndRMFlyU0cxUkswZFZTV3haYjFWdlUzaHRUV1owVDNwRldXUXhNMWx1V1VKM1ZISlFhRWxHU1ZadVlWRkNZVkZQZUVaRWNtcEVWVlpUYVhvS2NrZE1UM0pwVlZObFJtdzBiMFZYTDJReVJXNUhiV0UwWjA1M1oyWkxjREJoWVZaaVNVOUlPRkpSTWpaNU1FWTRUSEo2VUhKTGQxZDFhMkkyUmt4TVVRcGxOMlZuYkRoUE1rWXhTWGxHWnpGWk0zSXdRMEYzUlVGQllVNURUVVZCZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkphVUY2TldoYWF5OUplVnB4WkRZNVpXb3JkekJ3TVV0dVJYVk5RVEJIUTFOeFIxTkpZak1LUkZGRlFrTjNWVUZCTkVsQ1FWRkRTblZuVVhVeUsyc3lWRzUyWnk5S1JVbzRVbTlHWTA5QlZHUnFjak54VVZSUVF5ODVSbmRoY1dKelRWRnpOMHRFZVFwRFdHbFdjbXczU2tWd04zRkpSSHA1WWs5dlpYWkRUbHA1YmpoTE1reHFaMDlsT0hwR1drZDJMMkV4ZUUwM1FrNVBSMmxJYVdaVFZFTkJiSEpEWldNNENsbDFRbEJ1YjJwMVNEZFJZa2NyYzBFeGVWUTRUMEpQZERCellXWlVPRGxJZGxJeU5FTTBaWGhDYjFWMFVHSTBUVWRJUlZoUlozWXdMMlpOYlRkblZUVUtiekVyTHprMVdtUlBiMWhKWlhabllVSTJOMlE1Wm1vM1QwVXJkV2xJWjBkMVQwdHZZMmxLWjBrMVVEaExZbWRXV0Rkak9EaFdWRkYzTWtSemRWWnJlUXBMZVRKSEwyY3pPVVptUkRoeFlpOUdhVGc0UVdnNVYybG1ObVpRUlVaSlp6bFVMMjVMT1RWb1YybzBhMUU1YTIxdloyOTJObEJaTTJWSmMyb3JRMmM1Q21rM0sxQjFWbFpuV1ZKT1VFUlZiU3RrUkc4cmVucHRWQzlRU2pFMVRUUjNNbmRTWVFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogICAgc2VydmVyOiBodHRwczovL2t1YmVybmV0ZXMuZG9ja2VyLmludGVybmFsOjY0NDMKICBuYW1lOiBkb2NrZXItZGVza3RvcApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZG9ja2VyLWRlc2t0b3AKICAgIHVzZXI6IGRvY2tlci1kZXNrdG9wCiAgbmFtZTogZG9ja2VyLWRlc2t0b3AKY3VycmVudC1jb250ZXh0OiBkb2NrZXItZGVza3RvcApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGRvY2tlci1kZXNrdG9wCiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSSmVrTkRRV2QxWjBGM1NVSkJaMGxKVjFWR1NUazFWVUV2ZDNkM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEdWRVZVVFVKRlIwRXhWVVVLUVhoTlMyRXpWbWxhV0VwMVdsaFNiR042UVdWR2R6QjVUVlJGZVUxRVNYaE5SRWw0VFhwU1lVWjNNSGxOYWtWNVRVUkplRTFFU1hsTmVtaGhUVVJaZUFwR2VrRldRbWRPVmtKQmIxUkViazQxWXpOU2JHSlVjSFJaV0U0d1dsaEtlazFTYzNkSFVWbEVWbEZSUkVWNFNtdGlNazV5V2xoSmRGcHRPWGxNVjFKc0NtTXlkREJpTTBGM1oyZEZhVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkJVVlZCUVRSSlFrUjNRWGRuWjBWTFFXOUpRa0ZSUXpoQlVrUkJjREJFWnpOaGVFUUtPVzQyYVhJNGFXNDRRVzl6WVVwdU4wVXhlbmxGYkRkalozRlNPVlZDVjJKcFEwNDJVVnBCUlhkQmVHRjZha2dyZW5KWE5tUkZiRk5TU0ZoMWEwZDBXUXBtVGxReFJURXllRkppUjNZM1duWm1MM3A2VWk5TlEzaDJNa2x3U2tORU9Yb3pjVlp2TkROaFdXVXZiMVZGUm1ka2RtSkpWemRKTlhwTlpXdHRZM0kzQ2poclZHeDFSRGRtWkc0eVZqVjNRMlZ1TjNac1VXVnNOWFo2TjJ0a2NIVklUbkZLTURJd1RFOXBhWFJTYmt0dlJVTkhiemw2V0dOUFdHVkJTbkZyYlZVS2RUSlBiV000Tm1sMVpTc3hZMGRSVXk5bVJteGlTV2R3T0VKRVMyRkROV3dyWldOYVpEaG1WRTQyU1dKbFdraE5hMVkwYzI1aVdXOURhR0ZvVFdGWGJ3cDNSbEZsUVV4UVVUZE1WamhSTDFrNFEyVlFjM1ZpTTBzd09IWmhVVk5QYlZJd2RscFFOelIyZVZwaVpubzBaVEJ4WlZBck5VeFphRGhNUWtaSlRuQnpDbVppVkdwWU5YWjRRV2ROUWtGQlIycFdha0pWVFVFMFIwRXhWV1JFZDBWQ0wzZFJSVUYzU1VadlJFRlVRbWRPVmtoVFZVVkVSRUZMUW1kbmNrSm5SVVlLUWxGalJFRnFRVTFDWjA1V1NGSk5Ra0ZtT0VWQmFrRkJUVUk0UjBFeFZXUkpkMUZaVFVKaFFVWkphVUY2TldoYWF5OUplVnB4WkRZNVpXb3JkekJ3TVFwTGJrVjFUVUV3UjBOVGNVZFRTV0l6UkZGRlFrTjNWVUZCTkVsQ1FWRkRTRzF5WmpaSGJWbElibTgyVEVKMFpYRjJlVVpJVkZsbGRFaEpWbFYxZDFWcUNuVXZWV1l4TW5saFVYRXlMMjh5VDJwVFdEaDNkMmR6ZWs4NGIxVTNVMmRIUzJocFlrUm9UMUpsTmpkellucGxla2RwTDFCQ1dWaExPQ3RTY0ZkSU4zZ0tUSHBKVGxCWlMwVnZWMDF1VDFVek5YcHRZWHA1VVRkamRsUmlVWFF2WVVsaFEzWnpaRTB6V0dseGNqWjNSa3BxUkVkbmNVSnlOWFJaYW5WUlVIQmFiUXByZFVnNWFDOTFkSFV4VEdJNWREWjRSazVRVG1sc2RsRnpaa3QyTkdoWlIyVjFXRXRoWW1OTlkyRjVZblEwY3l0amIwZEZZelV4UzFSQ1VVMTBSMDlzQ2t4UFoyZ3hVVnBhVjFwVFNFSllhRU0xZGxwM1QxbzVXbmRUVFcxdFoxaDFObGRKTmpJclFsQjFURFZoUVdKWU5FOUNSbVJVUVRsNlYwWmpTeTlaVjJZS0wzcHRlV3BXWjA1RFVVOXBkbGRFUWtSNFQwZDBNbGxrVGpCWVdYRnRLelI2VkN0emJEWkVWR3RXZDBSTk9FTmpXR2RsZEFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRUZKUWtGQlMwTkJVVVZCZGtGRlVYZExaRUUwVGpKelVTOWFLMjl4TDBsd0wwRkxURWRwV2l0NFRtTTRhRXBsTTBsTGEyWldRVlp0TkdkcUNtVnJSMUZDVFVGTlYzTTBlQzl6TmpGMWJsSktWV3RTTVRkd1FuSlhTSHBWT1ZKT1pITlZWM2h5S3pKaU15ODRPREJtZWtGellqbHBTMU5SWnk5ak9UWUtiR0ZQVGpKdFNIWTJSa0pDV1VoaU1ubEdkWGxQWTNwSWNFcHVTeXN2U2tVMVltY3JNek5hT1d4bFkwRnVjQ3MzTlZWSWNHVmlPQ3MxU0dGaWFIcGhhUXBrVG5SRGVtOXZjbFZhZVhGQ1FXaHhVR014TTBSc00yZERZWEJLYkV4MGFuQnVVRTl2Y201MmRGaENhMFYyTTNoYVYzbEpTMlpCVVhsdFozVmFabTV1Q2tkWVprZ3dlbVZwUnpOdFVucEtSbVZNU2pJeVMwRnZWMjlVUjJ4eFRVSlZTR2REZWpCUGVURm1SVkF5VUVGdWFqZE1iVGw1ZEZCTU1tdEZhbkJyWkV3S01sUXJLMHc0YlZjek9DdElkRXR1YWk5MVV6Skpaa04zVWxORVlXSklNakEwTVN0aU9GRkpSRUZSUVVKQmIwbENRVkZEWTFRMlNqTkhNV2hyTTJOdGVBcG9RWFJOUW1rd2JDc3ZlbkJoVm5KR1JuaGtURXRTZWpNMlEwMU9SVmd5TVc0NU5HNWpjMVpyVUdGNlNDOTJTWGRqWm5SRlpVSlVVMDF3ZENzMk1VcHJDamgyTURSbGJ6WkhjVzVUVHpKc1lXdFRXbXgxTW1Rdk5IRlRMMkpHZFM5aVRuaHpjblZTTVdrclpGTXlObUYwUW05blpWUkdSRWs1ZG14WmNrMDNaRUlLTDA4NWRITTVLMHRsWjBReWJHMWhPR1pCUTBWSU1sbFpWa2h5WkVKYVZYaGFNVzlKVFhwUlMwb3ZabEpvTmtaMVZta3dZVk5yZFRGeFRVeGhZMnRVTHdwSVZqRkRUWFJFTlRNeU1HOWxZa1ZrVDJJd2FVaHRXR1ZGUzI1WVpXWlVlamxwZDBaV2NHOUliMWhvTlc1dlJHSlNZM04yUWtwd0t5ODRRM0JKU2t3M0NtdHFRekZ2T0hNNVkwVlNkbXN5WWxwcmVWQnBjRXB0V0RoYVJVd3dWbUphUVZnMmRHVmhiVmczWWxKMlIyaG1ZMlJaWWpOQkwyNUllbmxYWkZkUlZtWUtNMWg0ZEV0Nk1FWkJiMGRDUVZCWFJqVlFVREZCZUZBcldHdFdVVkZrY1VKdFVFdEtSamxUYkdWT1VrOW5hazVxY0U0NUt6VlFaV0pTUVcxdVZEVk5TUXBxYVVSRlEydE1NRGhJYlZoT1IwdDJjREUwSzFwWWF6Rllha3hFY1hoR1kzQjVUVzhyZGxZd1FXVkNhRkJaU1hvelRHSk1OemRIWkRnMk0yZEZSRzVEQ2sxQ2RsbDZWemcwYWs0MWQyTjFaRFYwVGtoYVIxSkRTM1JEWWtrdk4wOXdTekExWVRWTGRVdElOVkZ0TkhNM01HRjJVbWx1Wkd3elFXOUhRa0ZOVVVjS01WRnhTVEJzVldSeFpHOHJWRmRUU2xaR2RHY3hlRTlCUkhrMU5VbzVLMHBNUkdoaVIzcEdjbFZIYkdWNGVrNU9lbWN6YzJWcVRFVTFXalpVVmxWUFFRcHZja2dyTVdkRlNHcFVNREZTTlhKWmVIQkNOak13ZWpWa1ptODNTR293VUc5NlNUbGtiVloxTjJOUFdWZGhLM1V3Y1hGVlRVOUdNRUkwUjNCMmQyMHpDamczUzJ0YVpqZGtWRE5OVVZsTFZrdFpabWd3YVdjeFJtOTFZWFIwUW1aT1dtUnFOMk5CTDFoQmIwZEJUVXREV1ZCQmEyMHhkWEp0VjA5M1VWaDFjVlVLUmtaVk5uUjNPR1UwTURJMVZUbDRSVm93SzBkdlpGQkxiMlUzVmxBNVdFNDRTV1JxVlU5bFlWTlVjVGxWVmpWbk1EZFhaaXN5VjNGb2JuUnBaMnR1VEFwblNtTTFVRk4zUVhkNVVDOVFjVFYxTlVoV00zWTRTRGcxVlRobVdqVkZhVmhwUjA5aWNIcFJjV0V5ZWpGRmVYbHNNakZqU0ZnMllrNDJUbEJ2V2tjM0NqRm5WVU5xVldOTFFXaHVRbWxwVHpKdGVtZzRPSFpyUTJkWlFqZ3ZVVzgzZUVVcmQxYzVRMmRUYkdSWloydFFZVmM1TTI1SWFVVlFPV053V25WdlNVc0thMUJUSzNoMmEyNXdibTlJUjFaWlNVSk1PVXAyWTJaWVJ6UlJha2hXVFdablUyZzRNRmszV2psNU0yNDJjelUwT0hjclRXRm5ZM2xtVWpGcWRUWlFTQW81WlRaWE9FZHpSRFo0Umsxa2IwUXljVXhUWlVoRWFIQkZXVEozY1dGNmJVOHZTMWt4WnpOQ2FGUkVTMVUyYjNsSVJWTnNMemN2Um5Fdk5FaHhlbmxGQ2xwS1dHOVZkMHRDWjFGRVMzWm9SbVl5U1VabllXSnVUems1YnpRNU1XUjRRekpoVDBWeGRrSkxWVXRDTldsNWNIRkNlalJIYVRWclQzVlhja2wzWnpZS1NFTnpWM1ZDVVZJMGR6TmhUbU4wVFhSeFozUldWWHBvVVUxVFlUUmpPR0pFWTFGMlNtcDBMM0JpU0c1bFdUWjZiVk5LVVc5alpsTlJhMk5hUkhCUGNBb3JhMHRUTjNocFNVWldhVWxDU21kbVdERlFWMVV5VjBZd01sRXlRbkJEVUdwSlRHRlNVRlJwZDA1VVJsVXpUMVZHYzBjdlVsRTlQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo=
      #- GOOGLE_CREDENTIALS=base64_string_here_of_the_content_of_the gsa-key.json file_for_example: cat gsa-key.json | base64
      #- SKF_LABS_DEPLOY_MODE=subdomain
      #- JWT_ENABLED="False"
      #- SKF_DOJO_API_KEY=
  
  zap:
    build:
      context: ./Docker/zap/ 
      dockerfile: Dockerfile      
    container_name: skf-zap
    depends_on:
      - skf-api
      - skf-angular
    restart: always
    image: "pei/skf-zap2docker-stable:2.11.0"
    volumes:
      - zapwork:/zap/wrk:rw
    ports:
      - '7070:8080'
      - '7090:7090'
    environment:
      - ZAP_WEBSWING_OPTS=-host 0.0.0.0 -port 7090 -certpubdump /zap/wrk/owasp_zap_root_ca.cer -certfulldump  /zap/wrk/owasp_zap_root_ca.key
    user: zap
    command: 'zap-webswing.sh'

  firefox:
    build:
      context: ./Docker/firefox/
      dockerfile: Dockerfile   
    container_name: skf-firefox
    depends_on:
      - zap
    restart: on-failure:3    
    image: "pei/skf-firefox:v1.17.1"
    shm_size: '2gb'
    tmpfs:
      - /config
    volumes:
      #- ${HOME}/appdata/docker/firefox:/config
      - zapwork:/config/zap:ro
    ports:
      - '5800:5800'
    environment:
      # The name of the environment variable must start with FF_PREF_, followed by a string of your choice. For example, FF_PREF_MY_PREF is a valid name.
      - FF_PREF_HTTP_PROXYURL=network.proxy.autoconfig_url=\"http://skf-nginx_container/proxy_config.pac\"
      - FF_PREF_HTTP_PROXYTYPE=network.proxy.type=2 
  
  cyberchef:
   build:
      context: ./Docker/docker-cyberchef/
      dockerfile: Dockerfile   
      args: 
        - VERSION=v9.32.3
   container_name: skf-cyberchef
   restart: on-failure:3
   image: "pei/skf-cyberchef:v9.32.3"
   ports:
   - '8000:8000'

volumes:
  zapwork:
      driver_opts:
        type: tmpfs
        device: tmpfs
